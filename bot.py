# QUESTION:
#  –ù–∞–º –Ω—É–∂–Ω—ã –≤–æ–ø—Ä–æ—Å—ã:
#  1. –ì–¥–µ —Ç—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è?
#  2. –û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ?
#  3. –ú–æ–∂–µ—à—å –ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞—Ç—å ( —Ñ—É–ª–ª/–ø–∞—Ä—Ç/–Ω–µ—Ç)?
#  4. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ª–∏ —Ç–µ–±–µ –∫–∞–∫–∞—è-—Ç–æ –æ—Ä–≥ –ø–æ–º–æ—â—å?

# Import Library
import telegram
import telebot
import pandas as pd
import os.path
import configparser

from telebot import types
from datetime import date
from datetime import datetime

config = configparser.ConfigParser()
config.read('config.ini')

print(config.get('TOKEN','telegram-bot'))
bot = telebot.TeleBot(config.get('TOKEN','telegram-bot'))
print("\nToday's date:", date.today())

# init user-employee
@bot.message_handler(commands=["start"])
def start(m, res=False):
    bot.send_message(m.chat.id,
                     '‚úåÔ∏è *–ü—Ä–∏–≤–µ—Ç*, –Ω–∞—à –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏. üí≠ \n  –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –Ω–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–≤–æ–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–∞–∂–∏–º–∞–π –∫–æ–º–∞–Ω–¥—É üîª /today üîª',
                     parse_mode=telegram.ParseMode.MARKDOWN)

    user = {'date': date.today(),
              'time':	datetime.now().strftime("%H:%M:%S"),
              'username': m.chat.username,
              'event': 'connect',
              'event_description': 'done',
              'first_name': m.chat.first_name,
              'last_name': m.chat.last_name,
              'chat_id': m.chat.id}

    # Show new connection:
    print("\ndate:", date.today(), " | –ó–∞–∫–æ–Ω–µ–∫—Ç–∏–≤—Å—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ | ",  m.chat.username)

    if(os.path.exists('data.csv') == True):
        df = pd.read_csv("data.csv").append(user, ignore_index = True)
        df.to_csv("data.csv", index=False)
    else:
        print("Error: not find data.csv")



# COMMAND: today
# send questions for answer
@bot.message_handler(commands=["today"])
def today(m, res=False):
    # bot.delete_message(m.chat.id, m.message_id)
    markup1 = types.InlineKeyboardMarkup()
    buttonA1 = types.InlineKeyboardButton('Full-time', callback_data='Full-time')
    buttonB1 = types.InlineKeyboardButton('Part-time', callback_data='Part-time')
    buttonC1 = types.InlineKeyboardButton("Can't Work", callback_data="Can't work")

    markup2 = types.InlineKeyboardMarkup()
    buttonA2 = types.InlineKeyboardButton('0-2', callback_data='0-2')
    buttonB2 = types.InlineKeyboardButton('2-5', callback_data='2-5')
    buttonC2 = types.InlineKeyboardButton("5-7", callback_data="5-7")
    buttonD2 = types.InlineKeyboardButton("8-10", callback_data="8-10")

    markup3 = types.InlineKeyboardMarkup()
    buttonA3 = types.InlineKeyboardButton('–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ!', callback_data='–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ!')
    buttonB3 = types.InlineKeyboardButton('–ü–æ–º–æ—â—å –Ω–µ –Ω—É–∂–Ω–∞! –í—Å–µ —Ö–æ—Ä–æ—à–æ', callback_data='–ü–æ–º–æ—â—å –Ω–µ –Ω—É–∂–Ω–∞! –í—Å–µ —Ö–æ—Ä–æ—à–æ')

    markup4 = types.InlineKeyboardMarkup()
    buttonA4 = types.InlineKeyboardButton('–ó–∞ —Ä—É–±–µ–∂–æ–º', callback_data='–ó–∞ —Ä—É–±–µ–∂–æ–º')
    buttonB4 = types.InlineKeyboardButton('–ö—Ä—ã–º', callback_data='–ö—Ä—ã–º')
    buttonC4 = types.InlineKeyboardButton('–í–∏–Ω–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', callback_data='–í–∏–Ω–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å')
    buttonD4 = types.InlineKeyboardButton("–í–æ–ª—ã–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–í–æ–ª—ã–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonE4 = types.InlineKeyboardButton("–î–Ω–µ–ø—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–î–Ω–µ–ø—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonF4 = types.InlineKeyboardButton("–î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonG4 = types.InlineKeyboardButton("–ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonH4 = types.InlineKeyboardButton("–ó–∞–∫–∞—Ä–ø–∞—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ó–∞–∫–∞—Ä–ø–∞—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonI4 = types.InlineKeyboardButton("–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonJ4 = types.InlineKeyboardButton("–ò–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ò–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonK4 = types.InlineKeyboardButton("–ö–∏–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ö–∏–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonL4 = types.InlineKeyboardButton("–ö–∏—Ä–æ–≤–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ö–∏—Ä–æ–≤–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonM4 = types.InlineKeyboardButton("–õ—É–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–õ—É–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonN4 = types.InlineKeyboardButton("–õ—å–≤–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–õ—å–≤–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonO4 = types.InlineKeyboardButton("–ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonP4 = types.InlineKeyboardButton("–û–¥–µ—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–û–¥–µ—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonQ4 = types.InlineKeyboardButton("–†–æ–≤–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–†–æ–≤–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonR4 = types.InlineKeyboardButton("–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonS4 = types.InlineKeyboardButton("–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonT4 = types.InlineKeyboardButton("–ü–æ–ª—Ç–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ü–æ–ª—Ç–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonU4 = types.InlineKeyboardButton("–ö–∏–µ–≤", callback_data="–ö–∏–µ–≤")
    buttonV4 = types.InlineKeyboardButton("–°—É–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–°—É–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonW4 = types.InlineKeyboardButton("–¢–µ—Ä–Ω–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–¢–µ—Ä–Ω–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonX4 = types.InlineKeyboardButton("–•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonY4 = types.InlineKeyboardButton("–ß–µ—Ä–∫–∞—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ß–µ—Ä–∫–∞—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    buttonZ4 = types.InlineKeyboardButton("–ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
    button44 = types.InlineKeyboardButton("–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data="–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")

    markup4.row(buttonA4, buttonB4, buttonC4)
    markup4.row(buttonD4, buttonE4, buttonF4)
    markup4.row(buttonG4, buttonH4, buttonI4)
    markup4.row(buttonJ4, buttonK4, buttonL4)
    markup4.row(buttonP4, buttonQ4, buttonR4)
    markup4.row(buttonM4, buttonN4, buttonO4)
    markup4.row(buttonS4, buttonT4, buttonU4)
    markup4.row(buttonV4, buttonW4, buttonX4)
    markup4.row(buttonY4, buttonZ4, button44)

    bot.send_message(m.chat.id,
                "–î–∞–π, –ø–æ–∂–∞–ª—É—Å—Ç–∞, –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã")

    bot.send_message(m.chat.id,
                "üîπ 1. –ú–æ–∂–µ—à—å –ª–∏ —Ç—ã *—Ä–∞–±–æ—Ç–∞—Ç—å*?",
                parse_mode = telegram.ParseMode.MARKDOWN,
                reply_markup = markup1.row(buttonA1, buttonB1, buttonC1))

    bot.send_message(m.chat.id,
                "üîπ 2. –û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–µ *—Å–æ—Å—Ç–æ—è–Ω–∏–µ*: ( –æ—Ç 0 –∫ 10 )",
                parse_mode = telegram.ParseMode.MARKDOWN,
                reply_markup = markup2.row(buttonA2, buttonB2, buttonC2, buttonD2))

    bot.send_message(m.chat.id,
                "üîπ 3. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ª–∏ —Ç–µ–±–µ –∫–∞–∫–∞—è-—Ç–æ –æ—Ä–≥ *–ø–æ–º–æ—â—å*?",
                parse_mode = telegram.ParseMode.MARKDOWN,
                reply_markup = markup3.row(buttonA3).row(buttonB3))

    bot.send_message(m.chat.id,
                "üîπ 4. –ì–¥–µ —Ç—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–æ *–Ω–∞—Ö–æ–¥–∏—à—å—Å—è*?",
                parse_mode = telegram.ParseMode.MARKDOWN,
                reply_markup = markup4)


# Question: Can you work today?
# SAVE ANSWER
@bot.callback_query_handler(lambda call: True)
def handle(call):
    # MERGE data for answer:
    answer = {'date': date.today(),
              'time':	datetime.now().strftime("%H:%M:%S"),
              'username': call.message.chat.username,
              'event': 'clicks',
              'event_description': call.data,
              'first_name': call.message.chat.first_name,
              'last_name': call.message.chat.last_name,
              'chat_id': call.message.chat.id}

    if(os.path.exists('data.csv') == True):
        df = pd.read_csv("data.csv").append(answer, ignore_index = True)
        df.to_csv("data.csv", index=False)
    else:
        print("Error: not find data.csv")

    reply_to_user = "üî∫" + str(date.today()) + " " + str(call.message.text) + " | –í—ã –≤—ã–±—Ä–∞–ª–∏: *" + str(call.data) + "*  "
    bot.send_message(call.message.chat.id, reply_to_user,
                     parse_mode = telegram.ParseMode.MARKDOWN)



# Reply to user-employee answer:
@bot.message_handler(content_types=['text'])
def read_text(message):
    txt = message.text
    print("\n", date.today(), " ", datetime.now().strftime("%H:%M:%S"))
    print(message.chat.username, " ", " | Answer:")
    print(txt)

    answer_text = {'date': date.today(),
                   'time':	datetime.now().strftime("%H:%M:%S"),
                   'username': message.chat.username,
                   'event': 'message',
                   'event_description': txt,
                   'first_name': message.chat.first_name,
                   'last_name': message.chat.last_name,
                   'chat_id': message.chat.id }

    if(os.path.exists('data.csv') == True):
        df = pd.read_csv("data.csv").append(answer_text, ignore_index = True)
        df.to_csv("data.csv", index=False, encoding='utf-8')
    else:
        print("Error: not find data.csv")
    bot.send_message(message.chat.id, "–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–ª—å—à–µ. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—à—å –¥–µ—Ç–∞–ª–∏ !")


# run bot
bot.polling(none_stop=True, interval=0)
